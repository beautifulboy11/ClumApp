{"version":3,"sources":["../../src/pages/cards/cards.module.ts","../../src/pages/cards/cards.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAyC;AACO;AAEZ;AAapC;IAAA;IAA+B,CAAC;IAAnB,eAAe;QAX3B,+DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,yDAAS;aACV;YACD,OAAO,EAAE;gBACP,sEAAe,CAAC,QAAQ,CAAC,yDAAS,CAAC;aACpC;YACD,OAAO,EAAE;gBACP,yDAAS;aACV;SACF,CAAC;OACW,eAAe,CAAI;IAAD,sBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;;AChBsB;AACJ;AACU;AACjB;AAEO;AACoC;AAUlF;IAME,mBAAmB,OAAsB,EAAU,IAAiB;QAAjD,YAAO,GAAP,OAAO,CAAe;QAAU,SAAI,GAAJ,IAAI,CAAa;QAJpE,YAAO,GAAG,IAAI,qDAAO,EAAQ,CAAC;QAG9B,iBAAY,GAAG,IAAI,qDAAO,EAAQ,CAAC;IAGnC,CAAC;IAED,4BAAQ,GAAR;QAAA,iBAWC;QAVC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAM,gBAAgB,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QAC5C,IAAM,QAAQ,GAAG,oEAAK,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,gEAAQ,CAAC,cAAM,YAAI,CAAC,WAAW,EAAE,EAAlB,CAAkB,CAAC,CAAC,CAAC;QACjG,IAAI,CAAC,SAAS,GAAG,oEAAK,CAAC,gBAAgB,EAAE,QAAQ,CAAC,CAAC,IAAI,CAAC,gEAAQ,CAAC,cAAI,YAAI,CAAC,SAAS,GAAG,KAAK,EAAtB,CAAsB,CAAC,CAAC,CAAC;QAE9F,IAAM,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,iEAAS,CAAC,cAAM,YAAI,CAAC,gBAAgB,EAAE,EAAvB,CAAuB,CAAC,CAAC,CAAC;QACjF,IAAM,qBAAqB,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACtD,IAAM,KAAK,GAAG,oEAAK,CAAC,qBAAqB,EAAE,OAAO,CAAC,CAAC,IAAI,CAAC,6DAAK,CAAC,IAAI,CAAC,CAAC,CAAC;QACtE,IAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,6DAAK,CAAC,KAAK,CAAC,CAAC,CAAC;QAC9C,IAAI,CAAC,iBAAiB,GAAG,oEAAK,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;IAC/C,CAAC;IAED,+BAAW,GAAX;QACE,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;QACxB,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;IAC3B,CAAC;IAED,oCAAgB,GAAhB;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,4DAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/C,CAAC;IAED,+BAAW,GAAX;QACE,MAAM,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,4DAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAChE,CAAC;IAlCU,SAAS;QAJrB,gEAAS,CAAC;YACT,QAAQ,EAAE,YAAY;WACG;SAC1B,CAAC;kBAOoE;OANzD,SAAS,CAqCrB;IAAD,CAAC;AAAA;SArCY,SAAS,e","file":"13.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\n\nimport { CardsPage } from './cards';\n\n@NgModule({\n  declarations: [\n    CardsPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(CardsPage),   \n  ],\n  exports: [\n    CardsPage\n  ]\n})\nexport class CardsPageModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/cards/cards.module.ts","import { Component, OnInit } from '@angular/core';\nimport { IonicPage, NavController } from 'ionic-angular';\nimport { DataService } from '../../providers/providers';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from \"rxjs\";\nimport { merge } from 'rxjs/observable/merge';\nimport { take, switchMap, mergeMap, skip, mapTo, finalize } from 'rxjs/operators';\n\nexport interface article {\n  author: string, description: string, publishedAt: string, source: { id: string, name: string }, title: string, url: string, urlToImage: string\n}\n@IonicPage()\n@Component({\n  selector: 'page-cards',\n  templateUrl: 'cards.html'\n})\nexport class CardsPage implements OnInit {\n  showNotification$: Observable<boolean>;\n  update$ = new Subject<void>(); \n  isLoading: boolean;\n  articles$: Observable<Array<article>>;\n  forceReload$ = new Subject<void>();\n  constructor(public navCtrl: NavController, private data: DataService) {\n  \n  }\n\n  ngOnInit() {\n    this.isLoading = true;\n    const initialArticles$ = this.getNewsOnce();    \n    const updates$ = merge(this.update$, this.forceReload$).pipe(mergeMap(() => this.getNewsOnce()));\n    this.articles$ = merge(initialArticles$, updates$).pipe(finalize(()=>this.isLoading = false));\n\n    const reload$ = this.forceReload$.pipe(switchMap(() => this.getNotifications()));   \n    const initialNotifications$ = this.getNotifications();   \n    const show$ = merge(initialNotifications$, reload$).pipe(mapTo(true));\n    const hide$ = this.update$.pipe(mapTo(false));\n    this.showNotification$ = merge(show$, hide$); \n  }\n\n  forceReload() {\n    this.data.forceReload();\n    this.forceReload$.next();\n  }\n\n  getNotifications() {\n    return this.data.getGoogleNews.pipe(skip(1));\n  }\n  \n  getNewsOnce(){   \n    return this.articles$ = this.data.getGoogleNews.pipe(take(1));\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/cards/cards.ts"],"sourceRoot":""}